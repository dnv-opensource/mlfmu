[build-system]
build-backend = "hatchling.build"
requires = [
  "hatchling",
]

[tool.hatch.build.targets.sdist]
only-include = [
  "src/mlfmu",
  "tests",
  ".coveragerc",
  ".editorconfig",
  "pytest.ini",
  "ruff.toml",
  "uv.lock",
]

[tool.hatch.build.targets.wheel]
packages = [
  "src/mlfmu",
]

[project]
authors = [
  {name = "Jorge Luis Mendez", email = "jorge.luis.mendez@dnv.com"},
  {name = "Kristoffer Skare", email = "kristoffer.skare@dnv.com"},
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "License :: OSI Approved :: BSD License",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX :: Linux", # "Operating System :: MacOS",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Topic :: Scientific/Engineering",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
  "dictIO>=0.3.4",
  "pydantic>=2.6",
  "json-schema-for-humans>=0.4.7",
  "onnxruntime==1.18.1",
  "conan>=2.1",
]
description = "Export ML models represented as ONNX files to Functional-Mockup-Units (FMU)"
keywords = []
license = {file = "LICENSE"}
maintainers = [
  {name = "Kristoffer Skare", email = "kristoffer.skare@dnv.com"},
  {name = "Jorge Luis Mendez", email = "jorge.luis.mendez@dnv.com"},
  {name = "Hee Jong Park", email = "hee.jong.park@dnv.com"},
  {name = "Claas Rostock", email = "claas.rostock@dnv.com"},
]
name = "mlfmu"
readme = "README.md"
requires-python = ">= 3.10"
version = "1.0.3"

[project.urls]
Changelog = "https://github.com/dnv-opensource/mlfmu/blob/main/CHANGELOG.md"
Documentation = "https://dnv-opensource.github.io/mlfmu/README.html"
Homepage = "https://github.com/dnv-opensource/mlfmu"
Issues = "https://github.com/dnv-opensource/mlfmu/issues"
Repository = "https://github.com/dnv-opensource/mlfmu.git"

[tool.uv]
dev-dependencies = [
  "pytest>=8.3",
  "pytest-cov>=5.0",
  "ruff>=0.6.3",
  "pyright>=1.1.378",
  "mypy>=1.11.1",
  "sourcery>=1.22",
  "pre-commit>=3.8",
  "Sphinx>=8.0",
  "sphinx-argparse-cli>=1.17",
  "sphinx-autodoc-typehints>=2.2",
  "sphinxcontrib-mermaid>=1.0.0",
  "myst-parser>=4.0",
  "furo>=2024.8",
]
native-tls = true

[project.scripts]
mlfmu = "mlfmu.cli.mlfmu:main"
publish-interface-docs = "mlfmu.cli.publish_docs:main"

[tool.mypy]
check_untyped_defs = true
disable_error_code = [
  "misc",
  "import-untyped",
]
exclude = [
  "^src/mlfmu/fmu_build/cppfmu/",
]
files = [
  "src",
  "tests",
]
mypy_path = "stubs"
plugins = [
  "numpy.typing.mypy_plugin",
]

[tool.pyright]
exclude = [
  "src/mlfmu/fmu_build/cppfmu",
]
include = [
  "src",
  "tests",
  "examples",
]
stubPath = "stubs"

reportCallInDefaultInitializer = "warning" 
reportFunctionMemberAccess = "warning" 
reportIncompatibleMethodOverride = "warning" 
reportIncompatibleVariableOverride = "error" 
reportInconsistentConstructor = "error" 
reportMatchNotExhaustive = "warning" 
reportMissingParameterType = "error" 
reportMissingTypeArgument = "error" 
reportOverlappingOverload = "warning" 
reportPrivateUsage = "warning" 
reportPropertyTypeMismatch = "error" 
reportShadowedImports = "warning" 
reportTypeCommentUsage = "warning" 
reportUninitializedInstanceVariable = "warning" 
reportUnknownMemberType = "warning" # consider to set to `false` if you work a lot with matplotlib and pandas, which are both not properly typed and known to trigger this warning
reportUnknownParameterType = "warning" 
reportUnnecessaryCast = "warning" 
reportUnnecessaryComparison = "warning" 
reportUnnecessaryContains = "warning" 
reportUnnecessaryIsInstance = "information" 
reportUnnecessaryTypeIgnoreComment = "information" 
reportUntypedBaseClass = "error" 
reportUntypedClassDecorator = "warning" 
reportUntypedFunctionDecorator = "warning" 
reportUntypedNamedTuple = "warning" 
reportUnusedCallResult = "warning" 
reportUnusedExpression = "warning" 
typeCheckingMode = "basic" 
useLibraryCodeForTypes = true 
# Activate the following rules only locally and temporary, i.e. for a QA session.
# (For server side CI they are considered too strict.)
# reportMissingTypeStubs = true
# reportConstantRedefinition = "warning"
# reportImportCycles = "warning"
# reportImplicitStringConcatenation = "warning"
